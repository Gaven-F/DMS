@implements IDisposable
@inject ILogger<EChart> Logger
@inject IJSRuntime JS

<div class="card h-100 w-100">
	<div class="card-body">
		<div id="@chartDomId" class="echart-container"></div>
	</div>
</div>

@code {
	[Parameter]
	public string Option { get; set; } = $$""""
	{
		"xAxis": {
			"data": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
		},
		"yAxis": {},
		"series": [
			{
				"type": "bar",
				"data": [23, 24, 18, 25, 27, 28, 25]
			}
		]
	}
	"""";

	private string chartDomId = string.Join(string.Empty, Guid.NewGuid().ToByteArray().Select(it => GFUtils.Scale.Scale.Scale62Utils.Value.ToString(it)));

	protected override void OnAfterRender(bool firstRender)
	{
		if (firstRender) JS.InvokeVoidAsync("CHART.Initialized", chartDomId, Option);
	}

	public void Dispose()
	{
		JS.InvokeVoidAsync("CHART.Dispose", chartDomId);
	}

}

